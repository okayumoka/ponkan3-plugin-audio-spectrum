# Audio Spectrum Plugin for Ponkan3
*init
---
// Audio PonAudioSpectrum https://github.com/okayumoka/pon-audio-spectrum
//@include PonAudioSpectrum

var AudioSpectrum = function(ponkan) {
  var ponkan = ponkan;
  var pas = null;
  var layer = null;

  this.destroy = () => {
    if (pas != null) {
      pas.destroy();
      pas = null;
    }
    if (layer != null) {
      layer.freeCanvas();
      layer = null;
    }
  }
  this.beforeDraw = (tick) => {
    if (pas != null && pas.isReady && layer.visible) {
      pas.draw();
      layer.width = pas.canvas.width;
      layer.height = pas.canvas.height;
    }
  }
  var getType = this.getType = (typeStr) => {
    switch (typeStr) {
      case "solid": return PonAudioSpectrum.VisualizerType.Solid;
      case "block": return PonAudioSpectrum.VisualizerType.Block;
      default: return PonAudioSpectrum.VisualizerType.Solid;
    }
  };
  this.init = (buf, lay, typeStr, opts) => {
    var soundBuf = ponkan.getSoundBuffer(buf);
    layer = ponkan.getLayers({ lay: lay })[0];
    pas = new PonAudioSpectrum(getType(typeStr), opts != null ? opts : {});
    pas.setAudio(soundBuf.howl);
    layer.loadCanvas(pas.canvas);
  };
  this.destroy = () => {
  };
};

ponkan.addPlugin("audio-spectrum", new AudioSpectrum(window.ponkan));
---

*define_macro
;macro name: "init_audio_spectrum"
  - ponkan.getPlugin("audio-spectrum").init(mp.buf, mp.lay, mp.type, mp.options);
;endmacro

;macro name: "free_audio_spectrum"
  - ponkan.getPlugin("audio-spectrum").destroy();
;endmacro

;return

